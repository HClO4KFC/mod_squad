MobileViT(
  (stem): ConvNormAct(
    (conv): Conv2d(3, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn): BatchNormAct2d(
      16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
      (drop): Identity()
      (act): SiLU(inplace=True)
    )
  )
  (stages): Sequential(
    (0): Sequential(
      (0): BottleneckBlock(
        (conv1_1x1): ConvNormAct(
          (conv): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNormAct2d(
            32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
            (drop): Identity()
            (act): SiLU(inplace=True)
          )
        )
        (conv2_kxk): ConvNormAct(
          (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
          (bn): BatchNormAct2d(
            32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
            (drop): Identity()
            (act): SiLU(inplace=True)
          )
        )
        (conv2b_kxk): Identity()
        (attn): Identity()
        (conv3_1x1): ConvNormAct(
          (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNormAct2d(
            32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
            (drop): Identity()
            (act): Identity()
          )
        )
        (attn_last): Identity()
        (drop_path): Identity()
        (act): Identity()
      )
    )
    (1): Sequential(
      (0): BottleneckBlock(
        (conv1_1x1): ConvNormAct(
          (conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNormAct2d(
            64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
            (drop): Identity()
            (act): SiLU(inplace=True)
          )
        )
        (conv2_kxk): ConvNormAct(
          (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
          (bn): BatchNormAct2d(
            64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
            (drop): Identity()
            (act): SiLU(inplace=True)
          )
        )
        (conv2b_kxk): Identity()
        (attn): Identity()
        (conv3_1x1): ConvNormAct(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNormAct2d(
            64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
            (drop): Identity()
            (act): Identity()
          )
        )
        (attn_last): Identity()
        (drop_path): Identity()
        (act): Identity()
      )
      (1): BottleneckBlock(
        (shortcut): Identity()
        (conv1_1x1): ConvNormAct(
          (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNormAct2d(
            128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
            (drop): Identity()
            (act): SiLU(inplace=True)
          )
        )
        (conv2_kxk): ConvNormAct(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
          (bn): BatchNormAct2d(
            128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
            (drop): Identity()
            (act): SiLU(inplace=True)
          )
        )
        (conv2b_kxk): Identity()
        (attn): Identity()
        (conv3_1x1): ConvNormAct(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNormAct2d(
            64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
            (drop): Identity()
            (act): Identity()
          )
        )
        (attn_last): Identity()
        (drop_path): Identity()
        (act): Identity()
      )
    )
    (2): Sequential(
      (0): BottleneckBlock(
        (conv1_1x1): ConvNormAct(
          (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNormAct2d(
            128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
            (drop): Identity()
            (act): SiLU(inplace=True)
          )
        )
        (conv2_kxk): ConvNormAct(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
          (bn): BatchNormAct2d(
            128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
            (drop): Identity()
            (act): SiLU(inplace=True)
          )
        )
        (conv2b_kxk): Identity()
        (attn): Identity()
        (conv3_1x1): ConvNormAct(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNormAct2d(
            128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
            (drop): Identity()
            (act): Identity()
          )
        )
        (attn_last): Identity()
        (drop_path): Identity()
        (act): Identity()
      )
      (1): MobileVitV2Block(
        (conv_kxk): ConvNormAct(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
          (bn): BatchNormAct2d(
            128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
            (drop): Identity()
            (act): SiLU(inplace=True)
          )
        )
        (conv_1x1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (transformer): Sequential(
          (0): LinearTransformerBlock(
            (norm1): GroupNorm1(1, 64, eps=1e-05, affine=True)
            (attn): LinearSelfAttention(
              (qkv_proj): Conv2d(64, 129, kernel_size=(1, 1), stride=(1, 1))
              (attn_drop): Dropout(p=0.0, inplace=False)
              (out_proj): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              (out_drop): Dropout(p=0.0, inplace=False)
            )
            (drop_path1): DropPath(drop_prob=0.000)
            (norm2): GroupNorm1(1, 64, eps=1e-05, affine=True)
            (mlp): ConvMlp(
              (fc1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1))
              (norm): Identity()
              (act): SiLU()
              (drop): Dropout(p=0.0, inplace=False)
              (fc2): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            )
            (drop_path2): DropPath(drop_prob=0.000)
          )
          (1): LinearTransformerBlock(
            (norm1): GroupNorm1(1, 64, eps=1e-05, affine=True)
            (attn): LinearSelfAttention(
              (qkv_proj): Conv2d(64, 129, kernel_size=(1, 1), stride=(1, 1))
              (attn_drop): Dropout(p=0.0, inplace=False)
              (out_proj): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              (out_drop): Dropout(p=0.0, inplace=False)
            )
            (drop_path1): DropPath(drop_prob=0.000)
            (norm2): GroupNorm1(1, 64, eps=1e-05, affine=True)
            (mlp): ConvMlp(
              (fc1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1))
              (norm): Identity()
              (act): SiLU()
              (drop): Dropout(p=0.0, inplace=False)
              (fc2): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
            )
            (drop_path2): DropPath(drop_prob=0.000)
          )
        )
        (norm): GroupNorm1(1, 64, eps=1e-05, affine=True)
        (conv_proj): ConvNormAct(
          (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNormAct2d(
            128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
            (drop): Identity()
            (act): Identity()
          )
        )
      )
    )
    (3): Sequential(
      (0): BottleneckBlock(
        (conv1_1x1): ConvNormAct(
          (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNormAct2d(
            256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
            (drop): Identity()
            (act): SiLU(inplace=True)
          )
        )
        (conv2_kxk): ConvNormAct(
          (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=256, bias=False)
          (bn): BatchNormAct2d(
            256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
            (drop): Identity()
            (act): SiLU(inplace=True)
          )
        )
        (conv2b_kxk): Identity()
        (attn): Identity()
        (conv3_1x1): ConvNormAct(
          (conv): Conv2d(256, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNormAct2d(
            192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
            (drop): Identity()
            (act): Identity()
          )
        )
        (attn_last): Identity()
        (drop_path): Identity()
        (act): Identity()
      )
      (1): MobileVitV2Block(
        (conv_kxk): ConvNormAct(
          (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
          (bn): BatchNormAct2d(
            192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
            (drop): Identity()
            (act): SiLU(inplace=True)
          )
        )
        (conv_1x1): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (transformer): Sequential(
          (0): LinearTransformerBlock(
            (norm1): GroupNorm1(1, 96, eps=1e-05, affine=True)
            (attn): LinearSelfAttention(
              (qkv_proj): Conv2d(96, 193, kernel_size=(1, 1), stride=(1, 1))
              (attn_drop): Dropout(p=0.0, inplace=False)
              (out_proj): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1))
              (out_drop): Dropout(p=0.0, inplace=False)
            )
            (drop_path1): DropPath(drop_prob=0.000)
            (norm2): GroupNorm1(1, 96, eps=1e-05, affine=True)
            (mlp): ConvMlp(
              (fc1): Conv2d(96, 192, kernel_size=(1, 1), stride=(1, 1))
              (norm): Identity()
              (act): SiLU()
              (drop): Dropout(p=0.0, inplace=False)
              (fc2): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1))
            )
            (drop_path2): DropPath(drop_prob=0.000)
          )
          (1): LinearTransformerBlock(
            (norm1): GroupNorm1(1, 96, eps=1e-05, affine=True)
            (attn): LinearSelfAttention(
              (qkv_proj): Conv2d(96, 193, kernel_size=(1, 1), stride=(1, 1))
              (attn_drop): Dropout(p=0.0, inplace=False)
              (out_proj): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1))
              (out_drop): Dropout(p=0.0, inplace=False)
            )
            (drop_path1): DropPath(drop_prob=0.000)
            (norm2): GroupNorm1(1, 96, eps=1e-05, affine=True)
            (mlp): ConvMlp(
              (fc1): Conv2d(96, 192, kernel_size=(1, 1), stride=(1, 1))
              (norm): Identity()
              (act): SiLU()
              (drop): Dropout(p=0.0, inplace=False)
              (fc2): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1))
            )
            (drop_path2): DropPath(drop_prob=0.000)
          )
          (2): LinearTransformerBlock(
            (norm1): GroupNorm1(1, 96, eps=1e-05, affine=True)
            (attn): LinearSelfAttention(
              (qkv_proj): Conv2d(96, 193, kernel_size=(1, 1), stride=(1, 1))
              (attn_drop): Dropout(p=0.0, inplace=False)
              (out_proj): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1))
              (out_drop): Dropout(p=0.0, inplace=False)
            )
            (drop_path1): DropPath(drop_prob=0.000)
            (norm2): GroupNorm1(1, 96, eps=1e-05, affine=True)
            (mlp): ConvMlp(
              (fc1): Conv2d(96, 192, kernel_size=(1, 1), stride=(1, 1))
              (norm): Identity()
              (act): SiLU()
              (drop): Dropout(p=0.0, inplace=False)
              (fc2): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1))
            )
            (drop_path2): DropPath(drop_prob=0.000)
          )
          (3): LinearTransformerBlock(
            (norm1): GroupNorm1(1, 96, eps=1e-05, affine=True)
            (attn): LinearSelfAttention(
              (qkv_proj): Conv2d(96, 193, kernel_size=(1, 1), stride=(1, 1))
              (attn_drop): Dropout(p=0.0, inplace=False)
              (out_proj): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1))
              (out_drop): Dropout(p=0.0, inplace=False)
            )
            (drop_path1): DropPath(drop_prob=0.000)
            (norm2): GroupNorm1(1, 96, eps=1e-05, affine=True)
            (mlp): ConvMlp(
              (fc1): Conv2d(96, 192, kernel_size=(1, 1), stride=(1, 1))
              (norm): Identity()
              (act): SiLU()
              (drop): Dropout(p=0.0, inplace=False)
              (fc2): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1))
            )
            (drop_path2): DropPath(drop_prob=0.000)
          )
        )
        (norm): GroupNorm1(1, 96, eps=1e-05, affine=True)
        (conv_proj): ConvNormAct(
          (conv): Conv2d(96, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNormAct2d(
            192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
            (drop): Identity()
            (act): Identity()
          )
        )
      )
    )
    (4): Sequential(
      (0): BottleneckBlock(
        (conv1_1x1): ConvNormAct(
          (conv): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNormAct2d(
            384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
            (drop): Identity()
            (act): SiLU(inplace=True)
          )
        )
        (conv2_kxk): ConvNormAct(
          (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=384, bias=False)
          (bn): BatchNormAct2d(
            384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
            (drop): Identity()
            (act): SiLU(inplace=True)
          )
        )
        (conv2b_kxk): Identity()
        (attn): Identity()
        (conv3_1x1): ConvNormAct(
          (conv): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNormAct2d(
            256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
            (drop): Identity()
            (act): Identity()
          )
        )
        (attn_last): Identity()
        (drop_path): Identity()
        (act): Identity()
      )
      (1): MobileVitV2Block(
        (conv_kxk): ConvNormAct(
          (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
          (bn): BatchNormAct2d(
            256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
            (drop): Identity()
            (act): SiLU(inplace=True)
          )
        )
        (conv_1x1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (transformer): Sequential(
          (0): LinearTransformerBlock(
            (norm1): GroupNorm1(1, 128, eps=1e-05, affine=True)
            (attn): LinearSelfAttention(
              (qkv_proj): Conv2d(128, 257, kernel_size=(1, 1), stride=(1, 1))
              (attn_drop): Dropout(p=0.0, inplace=False)
              (out_proj): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
              (out_drop): Dropout(p=0.0, inplace=False)
            )
            (drop_path1): DropPath(drop_prob=0.000)
            (norm2): GroupNorm1(1, 128, eps=1e-05, affine=True)
            (mlp): ConvMlp(
              (fc1): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
              (norm): Identity()
              (act): SiLU()
              (drop): Dropout(p=0.0, inplace=False)
              (fc2): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            )
            (drop_path2): DropPath(drop_prob=0.000)
          )
          (1): LinearTransformerBlock(
            (norm1): GroupNorm1(1, 128, eps=1e-05, affine=True)
            (attn): LinearSelfAttention(
              (qkv_proj): Conv2d(128, 257, kernel_size=(1, 1), stride=(1, 1))
              (attn_drop): Dropout(p=0.0, inplace=False)
              (out_proj): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
              (out_drop): Dropout(p=0.0, inplace=False)
            )
            (drop_path1): DropPath(drop_prob=0.000)
            (norm2): GroupNorm1(1, 128, eps=1e-05, affine=True)
            (mlp): ConvMlp(
              (fc1): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
              (norm): Identity()
              (act): SiLU()
              (drop): Dropout(p=0.0, inplace=False)
              (fc2): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            )
            (drop_path2): DropPath(drop_prob=0.000)
          )
          (2): LinearTransformerBlock(
            (norm1): GroupNorm1(1, 128, eps=1e-05, affine=True)
            (attn): LinearSelfAttention(
              (qkv_proj): Conv2d(128, 257, kernel_size=(1, 1), stride=(1, 1))
              (attn_drop): Dropout(p=0.0, inplace=False)
              (out_proj): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
              (out_drop): Dropout(p=0.0, inplace=False)
            )
            (drop_path1): DropPath(drop_prob=0.000)
            (norm2): GroupNorm1(1, 128, eps=1e-05, affine=True)
            (mlp): ConvMlp(
              (fc1): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
              (norm): Identity()
              (act): SiLU()
              (drop): Dropout(p=0.0, inplace=False)
              (fc2): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
            )
            (drop_path2): DropPath(drop_prob=0.000)
          )
        )
        (norm): GroupNorm1(1, 128, eps=1e-05, affine=True)
        (conv_proj): ConvNormAct(
          (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNormAct2d(
            256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
            (drop): Identity()
            (act): Identity()
          )
        )
      )
    )
  )
  (final_conv): Identity()
  (head): ClassifierHead(
    (global_pool): SelectAdaptivePool2d (pool_type=avg, flatten=Flatten(start_dim=1, end_dim=-1))
    (drop): Dropout(p=0.0, inplace=False)
    (fc): Linear(in_features=256, out_features=1000, bias=True)
    (flatten): Identity()
  )
)